bind '"\C-j": "\C-atime \C-m"'
#export TIMEFORMAT='r: %R, u: %U, s: %S'

source_if_there() {
  local file="$1"
  if [ -f "$file" ]; then
    source "$file"
  fi
}

source_sub_with_bench() {
  local superfile="$1"
  local file="$2"
  if [[ $__bashrc_bench ]]; then
    oldtimeformat="$TIMEFORMAT"
		TIMEFORMAT="$superfile $file: %R"
		time . "$file"
    TIMEFORMAT="$oldtimeformat"
    unset oldtimeformat
	else
		. "$file"
	fi
}

source_with_bench() {
  local file="$1"
  if [[ $__bashrc_bench ]]; then
		oldtimeformat="$TIMEFORMAT"
		TIMEFORMAT="$file: %R"
		time . "$file"
    TIMEFORMAT="$oldtimeformat"
    unset oldtimeformat
	else
		. "$file"
	fi
}

for i in ~/.bashrc.d/*.sh; do
  source_with_bench "$i"
done; unset i

rconsole(){
  if [ -z "$1" ]; then
    environment="development"
  else
    environment="${1}"
  fi
  RAILS_ENV="$environment" bash -c "bundle exec rails c"
}

rserver(){
  if [ -z "$1" ]; then
    environment="development"
  else
    environment="${1}"
  fi
  RAILS_ENV="$environment" bash -c "bundle exec rails s"
}

hkdeploy () {
  git checkout master && \
    git pull origin master && \
    git push origin master && \
    git push heroku master && \
    heroku logs -t
}

waterfall_noise () {
  play \
    -c 2 \
    -n synth \
    pinknoise band \
    -n 250 3000 tremolo 0.05 30 reverb 20 \
    gain -l
}

function config_value() {
  cat ~/.config/"$1"
}
