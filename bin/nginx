#! /bin/bash
#
# nginx
#   conf: edits the main configuraton file
#   enable: enables site
#   disable: disables site
#   edit: edits a site
#   restart: restarts nginx using the init.d script
#
# Author: parkr
# Source: https://github.com/parkr/dotfiles/blob/master/bin/nginx

set -e

NGINX_CONF=/opt/nginx/conf

usage() {
  echo "nginx <subcommand> <site_name>"
  echo
  echo "Subcommands: status, stop, restart, conf, enable, disable, edit, enabled, available"
  echo "Sites:"
  ls -1 $NGINX_CONF/sites-available | gawk -F" " '{ print "   " $1 }'
}

enabled_sites() {
  echo "Enabled sites:"
  ls -1 $NGINX_CONF/sites-enabled | gawk -F" " '{ print "   " $1 }'
}

available_sites() {
  echo "Available sites:"
  ls -1 $NGINX_CONF/sites-available | gawk -F" " '{ print "   " $1 }'
}

[[ $# -lt 1 ]] && usage && exit 1

if [[ "$1" == "available" ]]; then
  available_sites
  exit
fi

if [[ "$1" == "enabled" ]]; then
  enabled_sites
  exit
fi

if [[ "$1" == "restart" ]]; then
  sudo service nginx restart
  exit $?
fi

if [[ "$1" == "start" ]]; then
  sudo service nginx start
  exit $?
fi

if [[ "$1" == "status" ]]; then
  sudo service nginx status
  exit $?
fi

if [[ "$1" == "stop" ]]; then
  sudo service nginx stop
  sudo killall nginx
  exit 0
fi

if [[ "$1" == "conf" ]]; then
  vim /opt/nginx/conf/nginx.conf -c "set syn=nginx"
  exit 0
fi

[[ $# -lt 2 ]] && usage && exit 1

if [[ "$1" == "enable" ]]; then
  if [ -f "$NGINX_CONF/sites-enabled/$2" ]; then
    echo "'$2' is already enabled."
  else
    sudo ln -s $NGINX_CONF/sites-available/$2 $NGINX_CONF/sites-enabled/$2
    echo "Enabled '$2'."
  fi
fi

if [[ "$1" == "disable" ]]; then
  sudo rm $NGINX_CONF/sites-enabled/$2
  echo "Disabled '$2'."
fi

if [[ "$1" == "edit" ]]; then
  $EDITOR $NGINX_CONF/sites-available/$2 -c "set syn=nginx"
  echo "$NGINX_CONF/sites-available/$2 successfully saved."
fi
